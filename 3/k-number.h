/*
 * Продолжение задачи №3
 * Заголовочные файлы
 * К - ичные числа.Среди чисел в системе счисления с основанием K(2≤K≤10) определить сколько
 * имеется чисел из N(1 < N < 20, N + K < 26) разрядов таких, что в их записи не содержится более
 * трех подряд идущих нулей.Для того, чтобы избежать переполнения, ответ
 * представьте в виде вещественного числа.
*/

#ifndef K-NUMBER_H_
#define K-NUMBER_H_

#include <string>
#include <utility>
#include <stdexcept>

/**
 * @file k-number.h
 * Заголовочный файл для работы с K-ичными числами
 */

 //FIXME: лучше вынести логику в отдельные функции
 /**
  * Проверяет корректность входных параметров
  * @param base Основание системы счисления (2 ≤ base ≤ 10)
  * @param digits Количество разрядов (1 < digits < 20)
  * @return true если параметры корректны, false в противном случае
  * @throws Не выбрасывает исключений, но выводит сообщения об ошибках в cerr
  */
bool validateInput(int base, int digits);

/**
 * Подсчитывает количество K-ичных N-разрядных чисел без двух+ подряд нулей
 * @param base Основание системы счисления (2 ≤ base ≤ 10)
 * @param digits Количество разрядов (1 < digits < 20)
 * @return Количество допустимых чисел в виде вещественного числа
 * @throws overflow_error при переполнении вычислений
 * @note Использует динамическое программирование для подсчета:
 *       - endsWithNonZero: числа, оканчивающиеся не на 0
 *       - endsWithOneZero: числа, оканчивающиеся на один 0
 */
double countValidNumbers(int base, int digits);

#endif  // K-NUMBER_H_
